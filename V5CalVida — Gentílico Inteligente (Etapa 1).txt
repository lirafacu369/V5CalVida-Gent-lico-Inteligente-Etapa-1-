<!doctype html>
<html lang="pt-BR">
<head>
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width,initial-scale=1" />
<title>V5CalVida - Versão B (Gentílico Inteligente)</title>
<style>
:root{--bg:#f4f6f9;--card:#ffffff;--muted:#6b7280;--accent:#2b7cff;--radius:12px;--shadow:0 8px 24px rgba(12,20,40,0.06)}
@media (prefers-color-scheme: dark){:root{--bg:#0b1220;--card:#0f1724;--muted:#94a3b8}}
html,body{height:100%;margin:0;background:linear-gradient(180deg,var(--bg), #e9eef6);font-family:Inter,system-ui,-apple-system,"Segoe UI",Roboto,Arial;color:#0f172a}
.app{max-width:920px;margin:20px auto;padding:20px}
.header{display:flex;align-items:center;gap:12px}
.header h1{margin:0;font-size:1.25rem}
.card{background:var(--card);border-radius:var(--radius);padding:16px;box-shadow:var(--shadow);margin-bottom:14px}
.controls{display:flex;gap:12px;align-items:flex-start}
.left-col{width:120px;text-align:center}
.avatar{width:90px;height:90px;border-radius:50%;object-fit:cover;border:3px solid transparent;box-shadow:0 6px 18px rgba(15,23,42,0.06);transition:transform .6s linear,border-color .3s}
.field-row{display:flex;gap:12px;margin-top:10px}
.field{flex:1}
label{display:block;font-size:0.9rem;color:var(--muted);margin-bottom:6px}
input,select,button{font-family:inherit}
input,select{width:100%;padding:10px;border-radius:8px;border:1px solid #e6e9ef;font-size:1rem;box-sizing:border-box;background:transparent}
.small{font-size:0.85rem;color:var(--muted)}
.btn{padding:10px 14px;border-radius:9px;border:0;background:var(--accent);color:#fff;cursor:pointer;font-weight:600}
.btn.ghost{background:transparent;border:1px solid #d1d5db;color:var(--muted)}
.gentilicBadge{margin-top:8px;display:inline-flex;align-items:center;gap:10px;padding:8px 12px;border-radius:999px;font-weight:700;cursor:default;user-select:none}
.bad-uf{width:36px;height:36px;border-radius:50%;display:inline-grid;place-items:center;font-weight:700;color:white}
.bad-carioca{background:#1e88ff}
.bad-mineiro{background:#16a34a}
.bad-capixaba{background:#c026d3}
.bad-baiano{background:#f59e0b}
.bad-paulista{background:#0f172a}
.tooltip{margin-left:10px;background:rgba(255,255,255,0.7);padding:8px;border-radius:8px;font-size:0.85rem;color:var(--muted)}
@media (max-width:800px){.field-row{flex-direction:column}.left-col{width:84px}}
.footer{margin-top:18px;text-align:center;color:var(--muted);font-size:0.85rem}
</style>
</head>
<body>
<div class="app">
  <header class="header">
    <h1>V5CalVida — Gentílico Inteligente (Etapa 1)</h1>
    <div style="margin-left:auto" class="small">Versão: <strong id="appVersion">1.1B</strong></div>
  </header>

  <section class="card">
    <div style="display:flex;justify-content:space-between;align-items:center">
      <div>
        <div class="small">Usuário atual</div>
        <div id="currentUserDisplay" style="font-weight:700">— nenhum —</div>
      </div>
      <div style="text-align:right">
        <div class="small">Premium: <span id="premiumBadge">não</span></div>
      </div>
    </div>
  </section>

  <section class="card">
    <div class="controls">
      <div class="left-col">
        <img id="imagePreview" class="avatar" src="" alt="avatar" />
        <input type="file" id="inputPhoto" accept="image/*" style="display:none">
        <div style="margin-top:8px"><button class="btn ghost" onclick="document.getElementById('inputPhoto').click()">Carregar</button></div>
      </div>

      <div style="flex:1">
        <label>Nome</label>
        <input type="text" id="inputName" placeholder="Digite seu nome e sobrenome">

        <div class="field-row">
          <div class="field">
            <label>Data de nascimento</label>
            <input type="date" id="inputDate" autocomplete="bday">
          </div>
          <div style="width:160px">
            <label>Hora de nascimento</label>
            <input type="time" id="inputTime">
          </div>
        </div>

        <div class="field-row">
          <div class="field">
            <label>Estado (UF) - Ex: Minas Gerais / MG</label>
            <input type="text" id="inputState" placeholder="Ex: Minas Gerais">
          </div>
          <div class="field">
            <label>Cidade</label>
            <input type="text" id="inputCity" placeholder="Ex: Belo Horizonte">
          </div>
        </div>

        <div style="display:flex;gap:8px;margin-top:12px;align-items:center">
          <button class="btn" id="btnSaveUser">Salvar usuário</button>
          <button class="btn ghost" id="btnCalculateNow">Calcular Agora</button>
          <div id="gentilicContainer" style="margin-left:8px"></div>
        </div>

        <div id="gentilicHint" style="margin-top:8px" class="tooltip" aria-live="polite">Dica: Digite o estado por extenso ou a sigla (ex.: "Minas Gerais" ou "MG").</div>
      </div>
    </div>
  </section>

  <section class="card" id="panelResult">
    <div style="display:flex;align-items:center;justify-content:space-between">
      <div>
        <div class="small">Idade</div>
        <div id="ageDisplay" style="font-weight:700;font-size:1.3rem">—</div>
        <div id="ageDetails" class="small">Preencha os dados e calcule</div>
        <div id="birthLocation" class="small" style="margin-top:8px">Local: —</div>
      </div>
      <div style="text-align:right">
        <div class="small">Modo atual: <strong id="modeBadge">—</strong></div>
        <div class="small" style="margin-top:8px">Última atualização: <span id="lastUpdate">—</span></div>
      </div>
    </div>
    <div style="margin-top:12px"><small class="small">Gentílico detectado será exibido imediatamente ao digitar cidade ou estado.</small></div>
  </section>

  <footer class="footer">ASL SegTI — direitos reservados.</footer>
</div>

<script>
const $ = id => document.getElementById(id);
const inputDate = $('inputDate'), inputTime = $('inputTime'),
      inputCity = $('inputCity'), inputState = $('inputState'),
      gentilicContainer = $('gentilicContainer'), avatar = $('imagePreview');

const STATE_MAP = {
  "ac":["Acre","acriano"], "al":["Alagoas","alagoano"], "ap":["Amapa","amapaense"],
  "am":["Amazonas","amazonense"], "ba":["Bahia","baiano"], "ce":["Ceara","cearense"],
  "df":["Distrito Federal","brasiliense"], "es":["Espirito Santo","capixaba"], "go":["Goias","goiano"],
  "ma":["Maranhao","maranhense"], "mt":["Mato Grosso","mato-grossense"], "ms":["Mato Grosso do Sul","sul-mato-grossense"],
  "mg":["Minas Gerais","mineiro"], "pa":["Para","paraense"], "pb":["Paraiba","paraibano"],
  "pr":["Parana","paranaense"], "pe":["Pernambuco","pernambucano"], "pi":["Piaui","piauiense"],
  "rj":["Rio de Janeiro","carioca"], "rn":["Rio Grande do Norte","potiguar"], "rs":["Rio Grande do Sul","gaúcho"],
  "ro":["Rondonia","rondoniense"], "rr":["Roraima","roraimense"], "sc":["Santa Catarina","catarinense"],
  "sp":["Sao Paulo","paulista"], "se":["Sergipe","sergipano"], "to":["Tocantins","tocantinense"]
};

const CITY_OVERRIDES = {
  "belo horizonte":"belo-horizontino","salvador":"baiano","recife":"pernambucano","fortaleza":"fortalezense",
  "curitiba":"curitibano","porto alegre":"porto-alegrense","vitoria":"capixaba","bh":"belo-horizontino",
  "rio":"carioca","rio de janeiro":"carioca","sao paulo":"paulista","são paulo":"paulista"
};

const norm = s => (s||'').toString().trim().toLowerCase().normalize('NFD').replace(/[\u0300-\u036f]/g,'');

function createGentilicBadge(gent, ufCode, ufLabel){
  gentilicContainer.innerHTML = '';
  if(!gent) return;
  const badge = document.createElement('div');
  badge.className = 'gentilicBadge';
  const uf = (ufCode||'').toUpperCase();
  const colorClass = gent.includes('carioca') ? 'bad-carioca' : gent.includes('mineiro') ? 'bad-mineiro' :
                     gent.includes('capixaba') ? 'bad-capixaba' : gent.includes('baiano') ? 'bad-baiano' : 'bad-paulista';
  const circle = document.createElement('div');
  circle.className = 'bad-uf ' + colorClass;
  circle.textContent = uf || (ufLabel? ufLabel.substr(0,2).toUpperCase() : '');
  const label = document.createElement('div');
  label.className = 'bad-label';
  label.innerHTML = `<span class="bad-title">${gent}</span><span class="bad-sub">${ufLabel||''}</span>`;
  badge.appendChild(circle);
  badge.appendChild(label);
  gentilicContainer.appendChild(badge);
}

function detectGentilic(){
  const stRaw = norm(inputState.value);
  const cityRaw = norm(inputCity.value);
  let gent=''; let ufCode=''; let ufLabel='';
  if(!stRaw && !cityRaw){ createGentilicBadge('','',''); return; }
  // UF code detection (MG, RJ, etc)
  const ufCandidate = stRaw.replace(/\./g,'').slice(0,2);
  if(ufCandidate && STATE_MAP[ufCandidate]){ ufCode = ufCandidate; ufLabel = STATE_MAP[ufCandidate][0]; gent = STATE_MAP[ufCandidate][1]; }
  else {
    for(const [code,arr] of Object.entries(STATE_MAP)){
      const nameNorm = norm(arr[0]);
      if(stRaw && (stRaw.includes(nameNorm) || nameNorm.includes(stRaw) || stRaw===nameNorm)){ ufCode=code; ufLabel=arr[0]; gent=arr[1]; break; }
    }
  }
  if(cityRaw && CITY_OVERRIDES[cityRaw]) gent = CITY_OVERRIDES[cityRaw];
  if(!gent && cityRaw.includes('rio')) gent='carioca';
  if(!gent && cityRaw.includes('paulo')) gent='paulista';
  createGentilicBadge(gent, ufCode, ufLabel);
  return gent;
}

inputCity.addEventListener('blur', detectGentilic);
inputState.addEventListener('blur', detectGentilic);
inputCity.addEventListener('input', ()=>{ if(inputCity.value.length>2) detectGentilic(); });

$('inputPhoto').addEventListener('change', e=>{
  const f = e.target.files[0]; if(!f) return;
  if(f.size > 3*1024*1024){ alert('Arquivo > 3MB'); return; }
  const r = new FileReader(); r.onload = ev => { avatar.src = ev.target.result; avatar.style.borderColor='#ddd'; setTimeout(()=>avatar.style.borderColor='transparent',1500); }; r.readAsDataURL(f);
});

inputDate.addEventListener('keydown', e=>{ if(e.key==='Enter'){ e.preventDefault(); inputTime.focus(); }});
inputDate.addEventListener('blur', ()=>{ if(!inputTime.value) inputTime.focus(); });
inputTime.addEventListener('keydown', e=>{ if(e.key==='Enter'){ e.preventDefault(); $('btnCalculateNow').click(); }});

function computeAgeParts(dobISO){
  const dob = new Date(dobISO); const now = new Date(); if(isNaN(dob)) return null;
  let years = now.getFullYear()-dob.getFullYear(), months = now.getMonth()-dob.getMonth(), days= now.getDate()-dob.getDate();
  let hours=now.getHours()-dob.getHours(), minutes=now.getMinutes()-dob.getMinutes(), seconds=now.getSeconds()-dob.getSeconds();
  if(seconds<0){ seconds+=60; minutes--; } if(minutes<0){ minutes+=60; hours--; } if(hours<0){ hours+=24; days--; }
  if(days<0){ const last = new Date(now.getFullYear(), now.getMonth(), 0).getDate(); days+=last; months--; }
  if(months<0){ months+=12; years--; }
  return {years,months,days,hours,minutes,seconds,totalDays: Math.floor((now-dob)/(1000*60*60*24))};
}

function calculateForForm(){
  const date = inputDate.value; const time = inputTime.value;
  if(!date){ alert('Informe a data de nascimento'); return; }
  const iso = time ? `${date}T${time}:00` : `${date}T08:00:00`;
  const parts = computeAgeParts(iso); if(!parts){ alert('Data inválida'); return; }
  $('ageDisplay').textContent = `${parts.years} anos, ${parts.months} meses, ${parts.days} dias`;
  $('ageDetails').textContent = `${parts.hours}h ${parts.minutes}m ${parts.seconds}s — Total dias: ${parts.totalDays}`;
  $('birthLocation').textContent = `Local: ${inputCity.value || 'Não informado'}${inputState.value ? ' — '+inputState.value : ''}`;
  $('lastUpdate').textContent = new Date().toLocaleTimeString('pt-BR');
}

$('btnCalculateNow').addEventListener('click', calculateForForm);

function uid(){ return 'u'+Date.now()+Math.floor(Math.random()*999); }
$('btnSaveUser').addEventListener('click', ()=>{
  const name = $('inputName').value.trim(); if(!name || name.indexOf(' ')===-1){ alert('Nome e sobrenome necessários'); return; }
  if(!inputDate.value){ alert('Informe a data'); return; }
  const time = inputTime.value || '08:00';
  const user = { id: uid(), name, city: inputCity.value.trim(), state: inputState.value.trim(), dobISO: `${inputDate.value}T${time}:00` };
  let users = JSON.parse(localStorage.getItem('agecalc_users')||'[]'); users.push(user); localStorage.setItem('agecalc_users', JSON.stringify(users));
  localStorage.setItem('agecalc_current', user.id);
  calculateForForm(); detectGentilic(); alert('Usuário salvo.');
});

document.addEventListener('DOMContentLoaded', ()=>{ const premium = localStorage.getItem('agecalc_premium')==='true'; $('premiumBadge').textContent = premium ? 'sim' : 'não'; });

</script>
</body>
</html>
